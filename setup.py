#!/usr/bin/env python3
# Generated by Copilot
"""
Setup script for Questionnaire Management System
Run this script to set up the application for the first time.
"""

import os
import sys
from flask import Flask
from flask_sqlalchemy import SQLAlchemy

def setup_application():
    """Set up the application for first-time use"""
    print("🚀 Setting up Questionnaire Management System...")
    
    # Check if we're in the right directory
    if not os.path.exists('app.py'):
        print("❌ Error: Please run this script from the project root directory")
        sys.exit(1)
    
    # Install dependencies
    print("📦 Installing dependencies...")
    os.system(f"{sys.executable} -m pip install -r requirements.txt")
    
    # Set up environment variables
    env_file = '.env'
    if not os.path.exists(env_file):
        print("📝 Creating environment configuration...")
        with open(env_file, 'w') as f:
            f.write("""# Flask Configuration
FLASK_ENV=development
SECRET_KEY=your-secret-key-change-this-in-production
DATABASE_URL=sqlite:///questionnaire_dev.db

# Email Configuration (Optional)
MAIL_SERVER=smtp.gmail.com
MAIL_PORT=587
MAIL_USE_TLS=true
MAIL_USERNAME=your-email@gmail.com
MAIL_PASSWORD=your-app-password
MAIL_DEFAULT_SENDER=your-email@gmail.com
SEND_EMAIL_NOTIFICATIONS=false

# Logging
LOG_LEVEL=INFO
""")
        print("✅ Created .env file - please update with your settings")
    else:
        print("✅ .env file already exists")
    
    # Initialize database
    print("🗄️ Setting up database...")
    from app import create_app, db
    
    app = create_app()
    with app.app_context():
        # Create all tables
        db.create_all()
        print("✅ Database tables created")
        
        # Check if admin user exists
        from app.models import User
        admin = User.query.filter_by(role='admin').first()
        
        if not admin:
            print("👤 Creating admin user...")
            username = input("Admin username (admin): ").strip() or "admin"
            email = input("Admin email (admin@example.com): ").strip() or "admin@example.com"
            
            # Get password securely
            import getpass
            password = getpass.getpass("Admin password: ")
            if not password:
                password = "admin123"
                print("⚠️ Using default password 'admin123' - please change this!")
            
            admin = User(
                username=username,
                email=email,
                first_name="Admin",
                last_name="User",
                role="admin",
                is_active=True
            )
            admin.set_password(password)
            db.session.add(admin)
            db.session.commit()
            print(f"✅ Admin user '{username}' created successfully!")
        else:
            print("✅ Admin user already exists")
    
    # Create logs directory
    if not os.path.exists('logs'):
        os.makedirs('logs')
        print("✅ Created logs directory")
    
    print("\n🎉 Setup complete! You can now run the application with:")
    print("   python app.py")
    print("\n📋 Don't forget to:")
    print("   1. Update the .env file with your settings")
    print("   2. Change the default SECRET_KEY for production")
    print("   3. Configure email settings if you want notifications")
    print("   4. Update the admin password if you used the default")

if __name__ == '__main__':
    setup_application()